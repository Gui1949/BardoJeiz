{"version":3,"sources":["logo.svg","pages/Login/login.js","pages/Feed/feed.js","pages/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","puxar_api","axios","get","then","res","dados","data","leitura","Feed","Object","values","colorir","objeto","style","color","ler_dados","undefined","console","log","conteudo","i","render","id","List","class","title","type","name","cols","rows","maxLength","for","accept","onChange","input","document","querySelector","getElementById","value","desc","FormData","append","files","fetch","method","body","response","ok","window","location","reload","upload","Avatar","ListItemText","primary","secondary","Fragment","Typography","component","variant","frameborder","allow","allowfullscreen","map","parseInt","includes","controls","onClick","id_btn","id_trat","replace","headers","Accept","JSON","stringify","ID","like","dislike","Routes","path","exact","Login","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.072ba3ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from '../../logo.svg';\nimport '../../App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"Feed\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport \"../../assets/styles/global.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { render } from \"@testing-library/react\";\n\n// const puxar_api = axios.get(`http://34.95.243.9/data`).then((res) => {\nconst puxar_api = axios\n  .get(`https://bardojeiz-server.herokuapp.com/data`)\n  .then((res) => {\n    puxar_api.dados = res.data;\n    puxar_api.leitura = puxar_api.dados.data;\n    let ler_dados = Object.values(puxar_api.leitura);\n    Feed(ler_dados);\n  });\n\nfunction like(id_btn) {\n  let id_trat = \"\";\n  id_trat = id_btn.replace(/[^0-9\\.]+/g, \"\");\n\n  let objeto_desfazer = document.getElementById(\"btn_dislike_\" + id_trat);\n  objeto_desfazer.style.color = \"#95a5a6\";\n\n  let objeto = document.getElementById(\"btn_like_\" + id_trat);\n\n  colorir(objeto);\n\n  fetch(\"https://bardojeiz-server.herokuapp.com/data/like\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ID: id_trat,\n    }),\n  });\n}\n\nfunction dislike(id_btn) {\n  let id_trat = \"\";\n  id_trat = id_btn.replace(/[^0-9\\.]+/g, \"\");\n\n  let objeto_desfazer = document.getElementById(\"btn_like_\" + id_trat);\n  objeto_desfazer.style.color = \"#95a5a6\";\n\n  let objeto = document.getElementById(\"btn_dislike_\" + id_trat);\n\n  colorir(objeto);\n\n  fetch(\"https://bardojeiz-server.herokuapp.com/data/dislike\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ID: id_trat,\n    }),\n  });\n}\n\nfunction colorir(objeto) {\n  if (objeto.style.color == \"rgb(255, 121, 198)\") {\n    objeto.style.color = \"#95a5a6\";\n  } else {\n    objeto.style.color = \"#ff79c6\";\n  }\n}\n\nfunction upload() {\n  var input = document.querySelector('input[type=\"file\"]');\n  var name = document.getElementById(\"txt_username\").value;\n  var desc = document.getElementById(\"txt_descricao\").value;\n  let apiUrl = \"https://bardojeiz-server.herokuapp.com/data/upload\";\n\n  var data = new FormData();\n  data.append(\"photo\", input.files[0]);\n  data.append(\"description\", desc);\n  data.append(\"username\", name);\n\n  fetch(apiUrl, {\n    method: \"POST\",\n    body: data,\n  }).then(function (response) {\n    if (response.ok) {\n      window.location.reload();\n    }\n  });\n}\n\nfunction Feed(ler_dados) {\n  if (ler_dados[1] == undefined) {\n    console.log(\"Não leu:\", ler_dados[1]);\n    return <p>Carregando...</p>;\n  } else {\n    let i = -1;\n    let conteudo;\n    render(\n      <>\n        <link\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n          rel=\"stylesheet\"\n        ></link>\n\n        {/* Barra superior */}\n        <nav className=\"top_nav\">\n          <a href=\"#\" className=\"nav_top_link\">\n            Bar do Jeiz\n          </a>\n        </nav>\n\n        <div id=\"master\">\n          <List className=\"lista_feed\">\n            <div id=\"post_header\">\n              <a href=\"#modal_upload\" className=\"material-icons\" id=\"upload\">\n                publish\n              </a>\n\n              <div id=\"modal_upload\" class=\"modal\">\n                <div class=\"modal_window\">\n                  <a href=\"#fechar\" title=\"Fechar\" class=\"fechar\">\n                    x\n                  </a>\n                  Username:\n                  <input type=\"text\" id=\"txt_username\" />\n                  <br />\n                  Descrição:\n                  <textarea\n                    name=\"Text1\"\n                    cols=\"40\"\n                    rows=\"5\"\n                    maxLength=\"70\"\n                    id=\"txt_descricao\"\n                  ></textarea>\n                  <br />\n                  <div id=\"btn_upload_modal\">\n                    <label\n                      for=\"btn_upload\"\n                      className=\"material-icons\"\n                      id=\"upload\"\n                    >\n                      publish\n                    </label>\n                    <input\n                      type=\"file\"\n                      id=\"btn_upload\"\n                      accept=\".png,.jpg,.mp4,.jpeg\"\n                      onChange={() => upload()}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div id=\"post_feed\">\n              <div id=\"header\">\n                <Avatar\n                  className=\"avatar\"\n                  alt=\"Desenvolvedor\"\n                  src=\"/static/images/avatar/2.jpg\"\n                />\n                <ListItemText\n                  primary={\n                    <p className=\"username\">\n                      Desenvolvedor{\" \"}\n                      <i className=\"material-icons\" id=\"post_fixo\">\n                        push_pin\n                      </i>\n                    </p>\n                  }\n                  className=\"username_data_post\"\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className=\"nav__icon\"\n                        color=\"textPrimary\"\n                      ></Typography>\n                      <p className=\"data_post\">24/01/2021 - 22:00</p>\n                    </React.Fragment>\n                  }\n                />\n              </div>\n\n              <iframe\n                class=\"conteudo\"\n                src=\"https://www.youtube.com/embed/q-bl2O-KnQ8\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              ></iframe>\n              <br />\n              <ListItemText\n                primary={\n                  <p className=\"descricao\">\n                    Opa, salve! Você está nesse momento no Bar do Jeiz, o\n                    Instagram se fosse bom! Em desenvolvimento desde Abril/2020,\n                    o Bar do Jeiz nada mais é do que um beta gigante, um monstro\n                    indomável... Nem eu sei aonde vai parar essa budega, mas\n                    enfim, por enquanto os posts duram por tempo limitado,\n                    então, aproveite enquanto é tempo...\n                  </p>\n                }\n                className=\"username_data_post\"\n              />\n            </div>\n            {ler_dados.map((ler_dados) => (\n              <div id=\"post_feed\">\n                {(() => {\n                  i++;\n                  console.log(\"Leu:\", ler_dados);\n                  window[\"Object\" + parseInt(i)] = new Object();\n                  window[\"Object\" + parseInt(i)] = Object.values(ler_dados);\n                  if (window[\"Object\" + i][4].includes(\".mp4\", \"mov\") == true) {\n                    conteudo = (\n                      <video className=\"conteudo\" controls>\n                        <source\n                          src={window[\"Object\" + i][4]}\n                          type=\"video/mp4\"\n                        />\n                      </video>\n                    );\n                  } else {\n                    conteudo = (\n                      <img className=\"conteudo\" src={window[\"Object\" + i][4]} />\n                    );\n                  }\n                })()}\n                <div id=\"header\">\n                  <Avatar\n                    className=\"avatar\"\n                    alt={window[\"Object\" + i][1]}\n                    src=\"/static/images/avatar/2.jpg\"\n                  />\n                  <ListItemText\n                    primary={\n                      <p className=\"username\">{window[\"Object\" + i][1]}</p>\n                    }\n                    className=\"username_data_post\"\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className=\"nav__icon\"\n                          color=\"textPrimary\"\n                        ></Typography>\n                        <p className=\"data_post\">{window[\"Object\" + i][3]}</p>\n                      </React.Fragment>\n                    }\n                  />\n                </div>\n                {conteudo}\n                <br />\n                <ListItemText\n                  primary={\n                    <p className=\"descricao\">\n                      {window[\"Object\" + i][5]} - {window[\"Object\" + i][6]}{\" \"}\n                      Likes, {window[\"Object\" + i][7]} Dislikes\n                    </p>\n                  }\n                  className=\"username_data_post\"\n                />\n\n                <button\n                  className=\"reacao_btn\"\n                  id={\"btn_like_\" + window[\"Object\" + i][0]}\n                  onClick={() => like(JSON.stringify(ler_dados, [\"ID\"]))}\n                >\n                  <i className=\"material-icons\" id=\"font_like\">\n                    thumb_up\n                  </i>\n                </button>\n                <button\n                  className=\"reacao_btn\"\n                  id={\"btn_dislike_\" + window[\"Object\" + i][0]}\n                  onClick={() => dislike(JSON.stringify(ler_dados, [\"ID\"]))}\n                >\n                  <i className=\"material-icons\" id=\"font_dislike\">\n                    thumb_down\n                  </i>\n                </button>\n              </div>\n            ))}\n          </List>\n        </div>\n        {/* Navigation bar inferior */}\n        <nav className=\"nav\">\n          <a href=\"#\" className=\"nav__link nav__link--active\">\n            <i className=\"material-icons nav__icon\">dashboard</i>\n            <span className=\"nav__text\">Feed</span>\n          </a>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Feed;\n","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Login from './Login/login';\nimport Feed from './Feed/feed';\n\nfunction Routes(){\n    return(\n        <BrowserRouter>\n        <Route path=\"/\" exact component={Feed} />\n        <Route path=\"/login\" component={Login} />\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport Routes from './pages/routes'\n\nfunction App() {\n  return (\n    <Routes/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}