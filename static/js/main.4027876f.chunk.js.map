{"version":3,"sources":["logo.svg","pages/Login/login.js","pages/Feed/feed.js","pages/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","puxar_api","axios","get","then","res","dados","data","leitura","Feed","Object","values","colorir","objeto","style","color","ler_dados","undefined","console","log","conteudo","i","render","id","List","class","title","type","name","cols","rows","maxLength","for","accept","onChange","input","document","querySelector","getElementById","value","desc","FormData","append","files","fetch","method","body","response","ok","window","location","reload","upload","Avatar","ListItemText","primary","secondary","Fragment","Typography","component","variant","frameborder","allow","allowfullscreen","map","parseInt","includes","controls","onClick","id_btn","id_trat","replace","headers","Accept","JSON","stringify","ID","like","dislike","Routes","path","exact","Login","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4027876f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"Feed\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport \"../../assets/styles/global.css\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst puxar_api = axios\r\n  .get(`https://bardojeiz-server.herokuapp.com/data`)\r\n  .then((res) => {\r\n    puxar_api.dados = res.data;\r\n    puxar_api.leitura = puxar_api.dados.data;\r\n    let ler_dados = Object.values(puxar_api.leitura);\r\n    Feed(ler_dados);\r\n  });\r\n\r\nfunction like(id_btn) {\r\n  let id_trat = \"\";\r\n  id_trat = id_btn.replace(/[^0-9\\.]+/g, \"\");\r\n\r\n  let objeto_desfazer = document.getElementById(\"btn_dislike_\" + id_trat);\r\n  objeto_desfazer.style.color = \"#95a5a6\";\r\n\r\n  let objeto = document.getElementById(\"btn_like_\" + id_trat);\r\n\r\n  colorir(objeto);\r\n\r\n  fetch(\"https://bardojeiz-server.herokuapp.com/data/like\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      ID: id_trat,\r\n    }),\r\n  });\r\n}\r\n\r\nfunction dislike(id_btn) {\r\n  let id_trat = \"\";\r\n  id_trat = id_btn.replace(/[^0-9\\.]+/g, \"\");\r\n\r\n  let objeto_desfazer = document.getElementById(\"btn_like_\" + id_trat);\r\n  objeto_desfazer.style.color = \"#95a5a6\";\r\n\r\n  let objeto = document.getElementById(\"btn_dislike_\" + id_trat);\r\n\r\n  colorir(objeto);\r\n\r\n  fetch(\"https://bardojeiz-server.herokuapp.com/data/dislike\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      ID: id_trat,\r\n    }),\r\n  });\r\n}\r\n\r\nfunction colorir(objeto) {\r\n  if (objeto.style.color == \"rgb(255, 121, 198)\") {\r\n    objeto.style.color = \"#95a5a6\";\r\n  } else {\r\n    objeto.style.color = \"#ff79c6\";\r\n  }\r\n}\r\n\r\nfunction upload() {\r\n  var input = document.querySelector('input[type=\"file\"]');\r\n  var name = document.getElementById(\"txt_username\").value;\r\n  var desc = document.getElementById(\"txt_descricao\").value;\r\n  let apiUrl = \"https://bardojeiz-server.herokuapp.com/data/upload\";\r\n\r\n  var data = new FormData();\r\n  data.append(\"photo\", input.files[0]);\r\n  data.append(\"description\", desc);\r\n  data.append(\"username\", name);\r\n\r\n  fetch(apiUrl, {\r\n    method: \"POST\",\r\n    body: data,\r\n  }).then(function (response) {\r\n    if (response.ok) {\r\n      window.location.reload();\r\n    }\r\n  });\r\n}\r\n\r\nfunction Feed(ler_dados) {\r\n  if (ler_dados[1] == undefined) {\r\n    console.log(\"Não leu:\", ler_dados[1]);\r\n    return <p>Carregando...</p>;\r\n  } else {\r\n    let i = -1;\r\n    let conteudo;\r\n    render(\r\n      <>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n\r\n        {/* Barra superior */}\r\n        <nav className=\"top_nav\">\r\n          <a href=\"#\" className=\"nav_top_link\">\r\n            Bar do Jeiz\r\n          </a>\r\n        </nav>\r\n\r\n        <div id=\"master\">\r\n          <List className=\"lista_feed\">\r\n            <div id=\"post_header\">\r\n              <a href=\"#modal_upload\" className=\"material-icons\" id=\"upload\">\r\n                publish\r\n              </a>\r\n\r\n              <div id=\"modal_upload\" class=\"modal\">\r\n                <div class=\"modal_window\">\r\n                  <a href=\"#fechar\" title=\"Fechar\" class=\"fechar\">\r\n                    x\r\n                  </a>\r\n                  Username:\r\n                  <input type=\"text\" id=\"txt_username\" />\r\n                  <br />\r\n                  Descrição:\r\n                  <textarea\r\n                    name=\"Text1\"\r\n                    cols=\"40\"\r\n                    rows=\"5\"\r\n                    maxLength=\"70\"\r\n                    id=\"txt_descricao\"\r\n                  ></textarea>\r\n                  <br />\r\n                  <div id=\"btn_upload_modal\">\r\n                    <label\r\n                      for=\"btn_upload\"\r\n                      className=\"material-icons\"\r\n                      id=\"upload\"\r\n                    >\r\n                      publish\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"btn_upload\"\r\n                      accept=\".png,.jpg,.mp4,.jpeg\"\r\n                      onChange={() => upload()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"post_feed\">\r\n              <div id=\"header\">\r\n                <Avatar\r\n                  className=\"avatar\"\r\n                  alt=\"Desenvolvedor\"\r\n                  src=\"/static/images/avatar/2.jpg\"\r\n                />\r\n                <ListItemText\r\n                  primary={\r\n                    <p className=\"username\">\r\n                      Desenvolvedor{\" \"}\r\n                      <i className=\"material-icons\" id=\"post_fixo\">\r\n                        push_pin\r\n                      </i>\r\n                    </p>\r\n                  }\r\n                  className=\"username_data_post\"\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className=\"nav__icon\"\r\n                        color=\"textPrimary\"\r\n                      ></Typography>\r\n                      <p className=\"data_post\">24/01/2021 - 22:00</p>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <iframe\r\n                class=\"conteudo\"\r\n                src=\"https://www.youtube.com/embed/q-bl2O-KnQ8\"\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n              <br />\r\n              <ListItemText\r\n                primary={\r\n                  <p className=\"descricao\">\r\n                    Opa, salve! Você está nesse momento no Bar do Jeiz, o\r\n                    Instagram se fosse bom! Em desenvolvimento desde Abril/2020,\r\n                    o Bar do Jeiz nada mais é do que um beta gigante, um monstro\r\n                    indomável... Nem eu sei aonde vai parar essa budega, mas\r\n                    enfim, por enquanto os posts duram por tempo limitado,\r\n                    então, aproveite enquanto é tempo...\r\n                  </p>\r\n                }\r\n                className=\"username_data_post\"\r\n              />\r\n            </div>\r\n            {ler_dados.map((ler_dados) => (\r\n              <div id=\"post_feed\">\r\n                {(() => {\r\n                  i++;\r\n                  console.log(\"Leu:\", ler_dados);\r\n                  window[\"Object\" + parseInt(i)] = new Object();\r\n                  window[\"Object\" + parseInt(i)] = Object.values(ler_dados);\r\n                  if (window[\"Object\" + i][4].includes(\".mp4\", \"mov\") == true) {\r\n                    conteudo = (\r\n                      <video className=\"conteudo\" controls>\r\n                        <source\r\n                          src={window[\"Object\" + i][4]}\r\n                          type=\"video/mp4\"\r\n                        />\r\n                      </video>\r\n                    );\r\n                  }\r\n                  else {\r\n                    conteudo = (\r\n                      <img className=\"conteudo\" src={window[\"Object\" + i][4]} />\r\n                    );\r\n                  }\r\n                  if (\r\n                    window[\"Object\" + i][4].includes(\r\n                      \"https://www.youtube.com\"\r\n                    ) == true\r\n                  ) {\r\n                    conteudo = (\r\n                      <iframe\r\n                        class=\"conteudo\"\r\n                        src={window[\"Object\" + i][4]}\r\n                        frameborder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowfullscreen\r\n                      ></iframe>\r\n                    );\r\n                  }\r\n                })()}\r\n                <div id=\"header\">\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    alt={window[\"Object\" + i][1]}\r\n                    src=\"/static/images/avatar/2.jpg\"\r\n                  />\r\n                  <ListItemText\r\n                    primary={\r\n                      <p className=\"username\">{window[\"Object\" + i][1]}</p>\r\n                    }\r\n                    className=\"username_data_post\"\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          className=\"nav__icon\"\r\n                          color=\"textPrimary\"\r\n                        ></Typography>\r\n                        <p className=\"data_post\">{window[\"Object\" + i][3]}</p>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </div>\r\n                {conteudo}\r\n                <br />\r\n                <ListItemText\r\n                  primary={\r\n                    <p className=\"descricao\">\r\n                      {window[\"Object\" + i][5]} - {window[\"Object\" + i][6]}{\" \"}\r\n                      Likes, {window[\"Object\" + i][7]} Dislikes\r\n                    </p>\r\n                  }\r\n                  className=\"username_data_post\"\r\n                />\r\n\r\n                <button\r\n                  className=\"reacao_btn\"\r\n                  id={\"btn_like_\" + window[\"Object\" + i][0]}\r\n                  onClick={() => like(JSON.stringify(ler_dados, [\"ID\"]))}\r\n                >\r\n                  <i className=\"material-icons\" id=\"font_like\">\r\n                    thumb_up\r\n                  </i>\r\n                </button>\r\n                <button\r\n                  className=\"reacao_btn\"\r\n                  id={\"btn_dislike_\" + window[\"Object\" + i][0]}\r\n                  onClick={() => dislike(JSON.stringify(ler_dados, [\"ID\"]))}\r\n                >\r\n                  <i className=\"material-icons\" id=\"font_dislike\">\r\n                    thumb_down\r\n                  </i>\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        {/* Navigation bar inferior */}\r\n        {/* <nav className=\"nav\">\r\n          <a href=\"#\" className=\"nav__link nav__link--active\">\r\n            <i className=\"material-icons nav__icon\">dashboard</i>\r\n            <span className=\"nav__text\">Feed</span>\r\n          </a>\r\n        </nav> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Login from './Login/login';\r\nimport Feed from './Feed/feed';\r\n\r\nfunction Routes(){\r\n    return(\r\n        <BrowserRouter>\r\n        <Route path=\"/\" exact component={Feed} />\r\n        <Route path=\"/login\" component={Login} />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './pages/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}